name: qr-attendance-app

service:
  type: web
  port: 8080
  
  # Resource allocation
  resources:
    cpu: 1000m
    memory: 1Gi
    
  # Health checks
  healthChecks:
    liveness:
      path: /actuator/health/liveness
      port: 8080
      initialDelay: 60
      period: 10
      timeout: 5
    readiness:
      path: /actuator/health/readiness
      port: 8080
      initialDelay: 30
      period: 10
      timeout: 5

  # Auto-scaling
  autoscaling:
    min: 1
    max: 3
    targetCPU: 70
    targetMemory: 80

build:
  type: maven
  buildCommand: mvn -B clean package -DskipTests
  runCommand: java -XX:+UseContainerSupport -Xmx768m -jar target/*.jar
  
  # Build caching for faster builds
  cache:
    - ~/.m2
    - target/maven-archiver
    - target/classes
    - target/generated-sources

dockerfile: |
  # Build stage
  FROM maven:3.8.6-eclipse-temurin-17 AS build
  WORKDIR /app
  
  # Copy only the POM file first to leverage Docker cache
  COPY pom.xml .
  # Download dependencies
  RUN mvn -B dependency:go-offline
  
  # Copy source code
  COPY src/ ./src/
  
  # Build the application
  RUN mvn -B clean package -DskipTests
  
  # Runtime stage
  FROM eclipse-temurin:17-jre
  
  # Set JVM options for better container performance
  ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp"
  
  WORKDIR /app
  COPY --from=build /app/target/*.jar app.jar
  
  EXPOSE 8080
  ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]
  
  # Health check
  HEALTHCHECK --interval=30s --timeout=5s --start-period=60s --retries=3 \
    CMD wget --quiet --tries=1 --spider http://localhost:8080/actuator/health || exit 1